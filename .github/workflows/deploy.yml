name: Build and deploy Anybot

on:
  push:
    branches:
      - main
      - test-any-bot
  workflow_dispatch:

env:
  NODE_VERSION: 20

jobs:
  deploy:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: [self-hosted, prod, Linux]
            branch: refs/heads/main
            stand: prod
            anybotPort: 3000
            timerTriggerPort: 3001
            blobPort: 10000
            queuePort: 10001
            tablePort: 10002
            cadvisorPort: 8080
          - runner: [self-hosted, test, Linux]
            branch: refs/heads/test-any-bot
            stand: test
            anybotPort: 3002
            timerTriggerPort: 3003
            blobPort: 11000
            queuePort: 11001
            tablePort: 11002
            cadvisorPort: 8081
    steps:
      - name: Checkout GitHub Action
        if: ${{ github.ref == matrix.branch }}
        uses: actions/checkout@v2

      - name: Set stand variable
        if: ${{ github.ref == matrix.branch }}
        run: |
          echo "STAND=${{ matrix.stand }}" > .env
          echo "ANYBOT_PORT=${{ matrix.anybotPort }}" >> .env
          echo "TIMER_TRIGGER_PORT=${{ matrix.timerTriggerPort }}" >> .env
          echo "BLOB_PORT=${{ matrix.blobPort }}" >> .env
          echo "QUEUE_PORT=${{ matrix.queuePort }}" >> .env
          echo "TABLE_PORT=${{ matrix.tablePort }}" >> .env
          echo "CADVISOR_PORT=${{ matrix.cadvisorPort }}" >> .env

      - name: Debug - Check port usage
        if: ${{ github.ref == matrix.branch }}
        run: |
          echo "=== Checking what's using port 10001 ==="
          sudo lsof -i :10001 || echo "Port 10001 appears to be free"
          echo "=== All running containers ==="
          docker ps -a
          echo "=== Docker networks ==="
          docker network ls

      - name: Restart docker compose
        if: ${{ github.ref == matrix.branch }}
        run: |
          docker compose --project-name ${{ matrix.stand }} down
          docker ps -a | grep -E "(azurite|prod-azurite)" | awk '{print $1}' | xargs -r docker stop
          docker ps -a | grep -E "(azurite|prod-azurite)" | awk '{print $1}' | xargs -r docker rm
          echo "=== After cleanup - checking port again ==="
          sudo lsof -i :10001 || echo "Port 10001 appears to be free"
          docker compose --project-name ${{ matrix.stand }} up --build -d

      - name: Delete unused images
        if: ${{ github.ref == matrix.branch }}
        run: |
          docker image prune -f
